"""
File: 924_Minimize_Malware_Spread.py
Date: 2019/02/18 13:53:19
"""
class Solution(object):
    def minMalwareSpread(self, graph, initial):
        """
        :type graph: List[List[int]]
        :type initial: List[int]
        :rtype: int
        """
        parent = {}
        def find(x):
            while x in parent and parent[x] != x:
                x = parent[x]
            return x

        def union(x, y):
            px = find(x)
            py = find(y)
            parent[px] = py

        n = len(graph[0])
        for v in range(n):
            for k in range(v + 1, n):
                if graph[v][k] == 1:
                    union(v, k)

        counter, initial_counter = collections.Counter(), collections.Counter()
        for k in range(n):
            p = find(k)
            counter[p] += 1
        for k in initial:
            p = find(k)
            initial_counter[p] += 1
            
        ret, max_m = min(initial), 0
        for k in initial:
            p = find(k)
            if initial_counter[p] == 1:
                if counter[p] > max_m:
                    ret, max_m = k, counter[p]
                elif counter[p] == max_m:
                    ret = min(ret, k)
        return ret
